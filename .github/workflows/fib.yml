name: CI
on:
  push:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v3

      #Skonfigurowanie dockera + buildx
      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      #Instalacja QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      #Konfiguracja cachowania
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      #Logowanie do Dockerhuba
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER_NAME}}
          password: ${{secrets.DOCKERHUB_USER_TOKEN}}

      #Logowanie do GHCR
      - name: Login to GitHub Container registry
        uses: docker/login-action@v1
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GHCR_TOKEN }}    

      #Zbudowanie obrazu
      - name: Build and push
        id: docker_build
        env:
          REGISTRY: ghcr.io
          OWNER: patrykKx
          IMAGE_NAME: ${{ github.repository }}
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,src=/tmp/.buildx-cache
          cache-to: type=registry,ref=docker.io/patrykkazmierak/fibcalc:cache1,mode=max
          platforms: linux/amd64,linux/arm64/v8
          context: .
          file: Dockerfile
          push: true
          tags: |
            $REGISTRY/$OWNER/$IMAGE_NAME:1.0.0
      
      #Przenies cache'a
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache